{"ast":null,"code":"var _jsxFileName = \"/Users/eunyeong/Desktop/React Project/CoE_Helper/CoE_Helper/src/components/ReusableComponents/CopyIcon.js\";\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nconst ICON = styled.div`\n  :hover {\n    opacity: .5;\n    cursor: pointer;\n    }  \n   display: inline-block;\n`;\n\nconst CopyIcon = ({\n  text\n}) => {\n  const [show, setShow] = useState(false);\n  const target = useRef(null); //copy to clipboard\n\n  const clickHandler = () => {\n    let tempInput = document.createElement(\"input\");\n    document.body.appendChild(tempInput);\n    tempInput.value = text;\n    tempInput.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tempInput);\n    setShow(!show);\n    setTimeout(removeTooltip, 2000);\n  };\n\n  const removeTooltip = () => {\n    setShow(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    placement: \"top\",\n    delay: {\n      show: 250,\n      hide: 200\n    },\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      id: \"button-tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    }, \"Copy me!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ICON, {\n    onClick: clickHandler,\n    ref: target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-clipboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Overlay, {\n    target: target.current,\n    show: show,\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    id: \"overlay-example\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }), \"\\xA0Copied! \\xA0\")));\n};\n\nexport default CopyIcon;","map":{"version":3,"sources":["/Users/eunyeong/Desktop/React Project/CoE_Helper/CoE_Helper/src/components/ReusableComponents/CopyIcon.js"],"names":["React","useState","useRef","styled","Overlay","Tooltip","OverlayTrigger","ICON","div","CopyIcon","text","show","setShow","target","clickHandler","tempInput","document","createElement","body","appendChild","value","select","execCommand","removeChild","setTimeout","removeTooltip","hide","current","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;;;;;;CAAxB;;AAQA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMY,MAAM,GAAGX,MAAM,CAAC,IAAD,CAArB,CAFyB,CAGzB;;AACF,QAAMY,YAAY,GAAG,MAAK;AACtB,QAAIC,SAAS,GAAIC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAjB;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,SAA1B;AACAA,IAAAA,SAAS,CAACK,KAAV,GAAkBV,IAAlB;AACAK,IAAAA,SAAS,CAACM,MAAV;AACAL,IAAAA,QAAQ,CAACM,WAAT,CAAqB,MAArB;AACAN,IAAAA,QAAQ,CAACE,IAAT,CAAcK,WAAd,CAA0BR,SAA1B;AACAH,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAa,IAAAA,UAAU,CAACC,aAAD,EAAgB,IAAhB,CAAV;AACH,GATD;;AAWA,QAAMA,aAAa,GAAG,MAAM;AACxBb,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI,uDACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,KAA1B;AACgB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAE,GAAR;AAAae,MAAAA,IAAI,EAAE;AAAnB,KADvB;AAEgB,IAAA,OAAO,eAAE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEZ,YAAf;AAA6B,IAAA,GAAG,EAAED,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ,eAWI,oBAAC,OAAD;AACI,IAAA,MAAM,EAAEA,MAAM,CAACc,OADnB;AAEI,IAAA,IAAI,EAAEhB,IAFV;AAGI,IAAA,SAAS,EAAC,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIMiB,KAAD,iBACG,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC;AAAZ,KAAkCA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALR,CAXJ,CADJ;AAyBD,CA5CD;;AA8CA,eAAenB,QAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport styled from 'styled-components';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nconst ICON = styled.div`\n  :hover {\n    opacity: .5;\n    cursor: pointer;\n    }  \n   display: inline-block;\n`;\n\nconst CopyIcon = ({text}) => {\n    const [show, setShow] = useState(false);\n    const target = useRef(null);\n    //copy to clipboard\n  const clickHandler = () =>{\n      let tempInput =  document.createElement(\"input\");\n      document.body.appendChild(tempInput);\n      tempInput.value = text;\n      tempInput.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(tempInput);\n      setShow(!show);\n      setTimeout(removeTooltip, 2000)\n  };\n\n  const removeTooltip = () => {\n      setShow(false);\n  };\n\n  return(\n      <>\n          <OverlayTrigger placement=\"top\"\n                          delay={{ show: 250, hide: 200 }}\n                          overlay={<Tooltip id=\"button-tooltip\" >\n                              Copy me!\n                          </Tooltip>}>\n              <ICON onClick={clickHandler} ref={target}>\n                  <i className=\"far fa-clipboard\"></i>\n              </ICON>\n          </OverlayTrigger>\n\n          <Overlay\n              target={target.current}\n              show={show}\n              placement=\"top\">\n              {(props) => (\n                  <Tooltip id=\"overlay-example\" {...props}>\n                      &nbsp;Copied! &nbsp;\n                  </Tooltip>\n              )}\n          </Overlay>\n      </>\n  );\n\n};\n\nexport default CopyIcon;"]},"metadata":{},"sourceType":"module"}