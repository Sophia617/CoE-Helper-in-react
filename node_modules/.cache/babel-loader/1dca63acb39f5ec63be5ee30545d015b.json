{"ast":null,"code":"var _jsxFileName = \"/Users/eunyeong/Desktop/React Project/CoE_Helper/CoE_Helper/src/components/CRICOSFinder/CRICOSFinder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport jsonData from \"../../data/coursesWithCRICOS\";\nimport Wrapper from \"./CRICOSFinder.styles\";\nimport Search from \"./Search\";\nimport CourseList from \"./CourseList\";\nimport PaginationComp from \"../ReusableComponents/PaginationComp\";\n\nconst CRICOSFinder = () => {\n  // Lists of courses from json file\n  const [courses, setCourses] = useState([]); // To save user's input query\n\n  const [query, setQuery] = useState(\"\"); // List of courses matching with user query\n\n  const [searchResult, setSearchResult] = useState([]); // shows CourseList component only when searching is true\n\n  const [searching, setSearching] = useState(false); // Pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coursesPerPage] = useState(7);\n  useEffect(() => {\n    setCourses([...jsonData]);\n  }, []);\n  useEffect(() => {\n    searchResultHandler();\n  }, [query]);\n  /***************************\n   *  Handling UserInput\n   * ************************/\n\n  const userInputHandler = userInput => {\n    setQuery(userInput);\n    userInput === \"\" ? setSearching(false) : setSearching(true);\n  };\n\n  const searchResultHandler = () => {\n    let filterQuery = query.toLowerCase();\n    const searchResultList = courses.filter(course => {\n      if (course.name.toLowerCase().indexOf(filterQuery) > -1) {\n        return course;\n      }\n\n      if (course.code.toLowerCase().indexOf(filterQuery) > -1) {\n        return course;\n      }\n    });\n    setSearchResult([...searchResultList]);\n  };\n  /***************************\n   *  Handling Pagination\n   * ************************/\n\n\n  const indexOfLastItem = currentPage * coursesPerPage;\n  const indexOfFirstItem = indexOfLastItem - coursesPerPage;\n  const currentSearchedCourses = searchResult.slice(indexOfFirstItem, indexOfLastItem);\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    id: \"cricosFinder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), \" CRICOS Finder\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    userInputHandler: userInputHandler,\n    query: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), searching && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CourseList, {\n    searchResult: currentSearchedCourses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 66\n    }\n  }), /*#__PURE__*/React.createElement(PaginationComp, {\n    itemsPerPage: coursesPerPage,\n    searchResult: searchResult.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default CRICOSFinder;","map":{"version":3,"sources":["/Users/eunyeong/Desktop/React Project/CoE_Helper/CoE_Helper/src/components/CRICOSFinder/CRICOSFinder.js"],"names":["React","useState","useEffect","Container","jsonData","Wrapper","Search","CourseList","PaginationComp","CRICOSFinder","courses","setCourses","query","setQuery","searchResult","setSearchResult","searching","setSearching","currentPage","setCurrentPage","coursesPerPage","searchResultHandler","userInputHandler","userInput","filterQuery","toLowerCase","searchResultList","filter","course","name","indexOf","code","indexOfLastItem","indexOfFirstItem","currentSearchedCourses","slice","paginate","pageNumber","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport jsonData from \"../../data/coursesWithCRICOS\";\nimport Wrapper from \"./CRICOSFinder.styles\";\nimport Search from \"./Search\";\nimport CourseList from \"./CourseList\";\nimport PaginationComp from \"../ReusableComponents/PaginationComp\";\n\nconst CRICOSFinder = () => {\n  // Lists of courses from json file\n  const [courses, setCourses] = useState([]);\n  // To save user's input query\n  const [query, setQuery] = useState(\"\");\n  // List of courses matching with user query\n  const [searchResult, setSearchResult] = useState([]);\n  // shows CourseList component only when searching is true\n  const [searching, setSearching] = useState(false);\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coursesPerPage] = useState(7);\n\n  useEffect(() => {\n    setCourses([...jsonData]);\n  }, []);\n\n  useEffect(() => {\n    searchResultHandler();\n  }, [query]);\n\n  /***************************\n   *  Handling UserInput\n   * ************************/\n\n  const userInputHandler = (userInput) => {\n    setQuery(userInput);\n    userInput === \"\" ? setSearching(false) : setSearching(true);\n  };\n\n  const searchResultHandler = () => {\n    let filterQuery = query.toLowerCase();\n    const searchResultList = courses.filter((course) => {\n      if (course.name.toLowerCase().indexOf(filterQuery) > -1) {\n        return course;\n      }\n      if (course.code.toLowerCase().indexOf(filterQuery) > -1) {\n        return course;\n      }\n    });\n    setSearchResult([...searchResultList]);\n  };\n\n  /***************************\n   *  Handling Pagination\n   * ************************/\n\n  const indexOfLastItem = currentPage * coursesPerPage;\n  const indexOfFirstItem = indexOfLastItem - coursesPerPage;\n  const currentSearchedCourses = searchResult.slice(\n    indexOfFirstItem,\n    indexOfLastItem\n  );\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <Wrapper id=\"cricosFinder\">\n      <Container>\n        <h1>\n          <i className=\"fas fa-search\"></i> CRICOS Finder\n        </h1>\n        <br />\n        <Search userInputHandler={userInputHandler} query={query} />\n        {searching && (\n          <>\n            <CourseList searchResult={currentSearchedCourses} /> <br />\n            <PaginationComp\n              itemsPerPage={coursesPerPage}\n              searchResult={searchResult.length}\n              paginate={paginate}\n            />\n          </>\n        )}\n      </Container>\n    </Wrapper>\n  );\n};\nexport default CRICOSFinder;\n"]},"metadata":{},"sourceType":"module"}