{"version":3,"sources":["components/Navigation.js","components/CoEHelper/CoEHelper.styles.js","components/ReusableComponents/FormGroup.js","components/CoEHelper/CoEHelperInputForm.js","components/ReusableComponents/CopyIcon.js","components/CoEHelper/ResultDisplay.js","components/CoEHelper/CoEHelper.js","components/ImportantDate/SessionDatesTable.js","components/ImportantDate/CoursesByCalendar.js","components/ReusableComponents/AlertMessage.js","components/ImportantDate/ImportantDates.styles.js","components/ImportantDate/ImportantDates.js","components/CRICOSFinder/CRICOSFinder.styles.js","components/CRICOSFinder/Search.js","components/CRICOSFinder/CourseList.js","components/ReusableComponents/PaginationComp.js","components/CRICOSFinder/CRICOSFinder.js","components/FeesCalculator/FeesCalculator.styles.js","components/FeesCalculator/InputGroupsDisplay.js","components/FeesCalculator/InputFieldsList.js","components/FeesCalculator/ResultSumDisplay.js","components/FeesCalculator/FeesCalculator.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","bg","variant","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Wrapper","styled","section","FormGroup","xs","sm","md","controlId","label","name","type","disabled","placeholder","inputTextHandler","icon","Form","Group","as","Col","Label","Control","onChange","CoECalculationForm","props","useState","totalCPS","completedCPS","pendingCPS","enrolledCPS","subjectTuitionFees","subjectCPSForFees","userValues","setInputValues","inputChangeHandler","e","value","target","parseFloat","parseInt","pendingCPSPopover","Popover","Title","Content","enrolledCPSpopover","onSubmit","preventDefault","inputData","storeInputValues","Row","OverlayTrigger","trigger","placement","overlay","Button","size","block","ICON","div","CopyIcon","text","show","setShow","useRef","removeTooltip","delay","hide","Tooltip","onClick","tempInput","document","createElement","body","appendChild","select","execCommand","removeChild","setTimeout","ref","Overlay","current","CalculationResult","remainingCreditPints","courseEndDate","totalTuitionFees","currentTuitionFees","hideDisplayCard","Card","Header","Body","Badge","style","background","color","Number","isNaN","CoEHelper","userInputs","setInputsValues","setRemainingCreditPints","setCourseEndDate","setTotalTuitionFees","setCurrentTuitionFees","showResult","setShowResult","useEffect","calculateValues","remainingCPS","calculateCourseEndDate","calcTuitionFees","remainingSession","totalRemainingCPS","toFixed","calcLastSession","session","console","log","tuitionFees","cps","estimatedTotalTuitionFees","Container","pill","ResultDisplay","SessionDatesTable","importantDatesBySession","setImportantDatesBySession","jsonData","Fragment","Tabs","defaultActiveKey","transition","map","index","Tab","eventKey","title","key","Table","striped","bordered","hover","calendars","dates","startDate","resultReleaseDate","censusDate","CoursesByCalendar","courses","Accordion","calendar","courseList","course","AlertMessage","message1","linkText","message2","Alert","ImportantDates","Search","query","userInputHandler","onKeyPress","CourseList","searchResult","length","ListGroup","result","Item","CRICOS","code","PaginationComp","itemsPerPage","paginate","pageNumbers","i","Math","ceil","push","returnPaginationJSX","number","Pagination","Ellipsis","CRICOSFinder","setCourses","setQuery","setSearchResult","searching","setSearching","currentPage","setCurrentPage","coursesPerPage","searchResultHandler","filterQuery","toLowerCase","searchResultList","filter","indexOf","indexOfLastItem","indexOfFirstItem","currentSearchedCourses","slice","userInput","pageNumber","CENTERDIV","InputGroupsDisplay","feesInTotalObj","addClickHandler","deleteClickHandler","showDeleteBtn","inputGroupTotalFeesObj","feesInTotal","fontSize","InputFieldsList","sumChanged","random","inputGroupIDArray","setInputGroupIDArray","inputGroupValuesArray","setInputGroupValuesArray","inputGroupTotalFeesArray","setInputGroupTotalFeesArray","setShowDeleteBtn","calculateTotalSum","calculateInputGroupFees","inputValuesInRow","totalFeesInRow","subjectFees","subjectNumbers","copiedInputGroupTotalFeesArray","totalSumItem","totalSumArray","item","totalSum","reduce","accumulator","currentValue","addInputGroup","newInputGroupId","deleteInputGroup","copiedInputGroupIDArray","copiedInputGroupValuesArray","inputGroupIdIndex","inputGroup","inputValuesIndex","userInputValues","totalFeesIndex","totalFees","splice","inputValue","find","ResultSumDisplay","sum","backgroundColor","FeesCalculator","setSum","showResultDisplay","setShowResultDisplay","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7dc9a96d.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\n\n\nconst Navigation =() => {\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n            <Navbar.Brand href=\"#home\">LET'S MAKE OUR WORK DAY EASIER </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link href=\"#home\">CoE Helper</Nav.Link>\n                    <Nav.Link href=\"#importantDates\">Dates</Nav.Link>\n                    <Nav.Link href=\"#cricosFinder\">CRICOS Finder</Nav.Link>\n                    <Nav.Link href=\"#feesCalculator\">Fees Calculator</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n};\n\nexport default Navigation;","import styled from \"styled-components\";\n\nconst Wrapper = styled.section`\n  padding: 1em;\n  padding-top: 4em;\n  padding-bottom: 4em;\n  background: #ebddd6;\n\n  .fa-times-circle {\n    color: darkgray;\n    font-size: 1.7rem;\n    position: absolute;\n    right: 10px;\n    :hover {\n      cursor: pointer;\n      color: grey;\n    }\n  }\n\n  .fa-question-circle {\n    color: #857e7a;\n    cursor: pointer;\n    :hover {\n      color: #665045;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap/esm/index\";\n\nconst FormGroup = ({\n  xs,\n  sm,\n  md,\n  controlId,\n  label,\n  name,\n  type,\n  disabled,\n  placeholder,\n  inputTextHandler,\n  icon,\n}) => {\n  return (\n    <Form.Group as={Col} xs={xs} sm={sm} md={md} controlId={controlId}>\n      <Form.Label>\n        <strong>{label}</strong>&nbsp;\n        {icon}\n      </Form.Label>\n      <Form.Control\n        name={name}\n        type={type}\n        disabled={disabled}\n        placeholder={placeholder}\n        onChange={inputTextHandler}\n      />\n    </Form.Group>\n  );\n};\n\nexport default FormGroup;\n","import React, { useState } from \"react\";\nimport { Form, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport FormGroup from \"../ReusableComponents/FormGroup\";\n\nconst CoECalculationForm = (props) => {\n  const [userValues, setInputValues] = useState({\n    totalCPS: 0,\n    completedCPS: 0,\n    pendingCPS: 0,\n    enrolledCPS: 24,\n    subjectTuitionFees: 0,\n    subjectCPSForFees: 0,\n  });\n\n  // when the form is submitted, send userInput details to CoE Helper.js\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const inputData = { ...userValues };\n    props.storeInputValues(inputData);\n  };\n\n  // Update object value from user input\n  function inputChangeHandler(e) {\n    let value = e.target.value === \"\" ? 0 : e.target.value;\n    if (e.target.name === \"subjectTuitionFees\") {\n      value = parseFloat(value);\n    } else {\n      value = parseInt(value);\n    }\n    setInputValues({\n      ...userValues,\n      [e.target.name]: value,\n    });\n  }\n\n  // tooltip\n  const pendingCPSPopover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">What is Pending CPS?</Popover.Title>\n      <Popover.Content>\n        Credit points of pending result from the previous session. Calculate\n        course end date <strong>assuming the subject will be passed.</strong>\n      </Popover.Content>\n    </Popover>\n  );\n\n  const enrolledCPSpopover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">What is enrolled CPS?</Popover.Title>\n      <Popover.Content>\n        Enrolled credit points for the upcoming session. <br />\n        <strong>If RSL approved,</strong> enter approved credit points (e.g. 18){\" \"}\n        <br />\n        <strong> If over-enrolled,</strong> enter full cps enrolled (e.g. 30)\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <>\n      <Form onSubmit={submitHandler}>\n        <Form.Row>\n          <FormGroup\n            xs={6} md={3}\n            controlId=\"totalCPS\"\n            label=\"Total CPS\"\n            name={\"totalCPS\"}\n            type=\"number\"\n            placeholder={\"e.g. 144\"}\n            inputTextHandler={inputChangeHandler}\n          />\n          <FormGroup\n            xs={6} md={3}\n            controlId=\"completedCPS\"\n            label=\"Completed CPS\"\n            name={\"completedCPS\"}\n            type=\"number\"\n            placeholder={\"e.g. 96\"}\n            inputTextHandler={inputChangeHandler}\n          />\n\n          <FormGroup\n            xs={6} md={3}\n            controlId=\"pendingCPS\"\n            label=\"Pending CPS\"\n            name={\"pendingCPS\"}\n            type=\"number\"\n            placeholder={\"e.g. 6\"}\n            inputTextHandler={inputChangeHandler}\n            icon={\n              <OverlayTrigger\n                trigger=\"click\"\n                placement=\"top\"\n                overlay={pendingCPSPopover}\n              >\n                <span>\n                  <i className=\"fas fa-question-circle\"></i>\n                </span>\n              </OverlayTrigger>\n            }\n          />\n\n          <FormGroup\n            xs={6} md={3}\n            controlId=\"enrolledCPS\"\n            label=\"Enrolled CPS\"\n            name={\"enrolledCPS\"}\n            type=\"number\"\n            placeholder={\"e.g. 24\"}\n            inputTextHandler={inputChangeHandler}\n            icon={\n              <OverlayTrigger\n                trigger=\"click\"\n                placement=\"top\"\n                overlay={enrolledCPSpopover}\n              >\n                <span>\n                  <i className=\"fas fa-question-circle\"></i>\n                </span>\n              </OverlayTrigger>\n            }\n          />\n        </Form.Row>\n\n        <Form.Row>\n          <FormGroup\n            md={6}\n            controlId=\"subjectTuitionFees\"\n            label=\"Subject Tuition Fees\"\n            name={\"subjectTuitionFees\"}\n            type=\"text\"\n            disabled={false}\n            placeholder={\"e.g. 5775.5\"}\n            inputTextHandler={inputChangeHandler}\n          />\n\n          <FormGroup\n            md={6}\n            controlId=\"subjectCPS\"\n            label=\"Subject CPS for Tuition Fees\"\n            name={\"subjectCPSForFees\"}\n            type=\"number\"\n            disabled={false}\n            placeholder={\"e.g. 6\"}\n            inputTextHandler={inputChangeHandler}\n          />\n        </Form.Row>\n\n        <Button variant=\"secondary\" size=\"lg\" block type=\"submit\">\n          Calculate <i className=\"fas fa-glass-cheers\"></i>\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default CoECalculationForm;\n","import React, {useState, useRef} from 'react';\nimport styled from 'styled-components';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nconst ICON = styled.div`\n  :hover {\n    opacity: .5;\n    cursor: pointer;\n    }  \n   display: inline-block;\n`;\n\nconst CopyIcon = ({text}) => {\n    const [show, setShow] = useState(false);\n    const target = useRef(null);\n    //copy to clipboard\n  const clickHandler = () =>{\n      let tempInput =  document.createElement(\"input\");\n      document.body.appendChild(tempInput);\n      tempInput.value = text;\n      tempInput.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(tempInput);\n      setShow(!show);\n      setTimeout(removeTooltip, 2000)\n  };\n\n  const removeTooltip = () => {\n      setShow(false);\n  };\n\n  return(\n      <>\n          <OverlayTrigger placement=\"top\"\n                          delay={{ show: 250, hide: 200 }}\n                          overlay={<Tooltip id=\"button-tooltip\" >\n                              Copy me!\n                          </Tooltip>}>\n              <ICON onClick={clickHandler} ref={target}>\n                  <i className=\"far fa-clipboard\"></i>\n              </ICON>\n          </OverlayTrigger>\n\n          <Overlay\n              target={target.current}\n              show={show}\n              placement=\"top\">\n              {(props) => (\n                  <Tooltip id=\"overlay-example\" {...props}>\n                      &nbsp;Copied! &nbsp;\n                  </Tooltip>\n              )}\n          </Overlay>\n      </>\n  );\n\n};\n\nexport default CopyIcon;","import React from \"react\";\nimport { Card, Badge } from \"react-bootstrap\";\nimport CopyIcon from \"../ReusableComponents/CopyIcon\";\n\nconst CalculationResult = ({\n  remainingCreditPints,\n  courseEndDate,\n  totalTuitionFees,\n  currentTuitionFees,\n  hideDisplayCard,\n}) => {\n  return (\n    <>\n      <Card>\n        <Card.Header as=\"h5\">\n          RESULT\n          <span onClick={hideDisplayCard}>\n            <i className=\"fas fa-times-circle\"></i>\n          </span>\n        </Card.Header>\n\n        <Card.Body>\n          <li className=\"h5\">\n            <strong>Remaining Credit Pints: </strong>\n            <Badge style={{ background: \"#6d6875\", color: \"#f0efeb\" }}>\n              {remainingCreditPints} cps\n            </Badge>\n          </li>\n\n          <li className=\"h5\">\n            <strong>Estimated Course End Date: </strong>\n            <Badge style={{ background: \"#6d6875\", color: \"#f0efeb\" }}>\n              {courseEndDate} &nbsp;\n              <CopyIcon text={courseEndDate}></CopyIcon>\n            </Badge>\n          </li>\n\n          {!Number.isNaN(totalTuitionFees) && (\n            <li className=\"h5\">\n              <strong>Estimated Total Tuition Fees: </strong>\n              <Badge style={{ background: \"#6d6875\", color: \"#f0efeb\" }}>\n                A$ {totalTuitionFees} &nbsp;\n                <CopyIcon text={totalTuitionFees}></CopyIcon>\n              </Badge>\n            </li>\n          )}\n\n          {!Number.isNaN(currentTuitionFees) && (\n            <li className=\"h5\">\n              <strong>Tuition Fees in Autumn 2021: </strong>\n              <Badge style={{ background: \"#6d6875\", color: \"#f0efeb\" }}>\n                A$ {currentTuitionFees} &nbsp;\n                <CopyIcon text={currentTuitionFees}></CopyIcon>\n              </Badge>\n            </li>\n          )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default CalculationResult;\n","import React, { useState, useEffect } from \"react\";\nimport { Badge, Container } from \"react-bootstrap\";\nimport Wrapper from \"./CoEHelper.styles\";\nimport CoECalculationForm from \"./CoEHelperInputForm\";\nimport ResultDisplay from \"./ResultDisplay\";\n\nconst CoEHelper = () => {\n  const [userInputs, setInputsValues] = useState({});\n  const [remainingCreditPints, setRemainingCreditPints] = useState(0);\n  const [courseEndDate, setCourseEndDate] = useState(\"\");\n  const [totalTuitionFees, setTotalTuitionFees] = useState(0);\n  const [currentTuitionFees, setCurrentTuitionFees] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n\n  useEffect(() => {\n    calculateValues();\n  }, [userInputs]);\n\n  //setValues - whenever form is submitted (calculate button clicked setValues and form updated)\n  const storeInputValues = (inputData) => {\n    setInputsValues({ ...inputData });\n    setShowResult(true);\n  };\n\n  const calculateValues = () => {\n    // Calculate Remaining Credit Pints:\n    let remainingCPS =\n      userInputs.totalCPS - userInputs.completedCPS - userInputs.pendingCPS;\n    setRemainingCreditPints(remainingCPS);\n    // Calculate Estimated course end date\n    calculateCourseEndDate(remainingCPS);\n    // Calculate Estimated  Tuition fees\n    calcTuitionFees(remainingCPS);\n  };\n\n  // if enrolledCps is 0  - 24 just as normal.\n  // if enrolled cps is less than 24 cps  (add gap)\n  // if enrolled cps is more than 24 cps (deduct gap)\n  const calculateCourseEndDate = (remainingCPS) => {\n    let totalRemainingCPS = remainingCPS;\n    let enrolledCPS = userInputs.enrolledCPS;\n    let remainingSession;\n\n    if (enrolledCPS < 24) {\n      totalRemainingCPS = totalRemainingCPS + (24 - enrolledCPS);\n      remainingSession = (totalRemainingCPS / 24).toFixed(1);\n      totalRemainingCPS = totalRemainingCPS - (24 - enrolledCPS);\n    }\n\n    if (enrolledCPS > 24) {\n      totalRemainingCPS = totalRemainingCPS - (enrolledCPS - 24);\n      remainingSession = (totalRemainingCPS / 24).toFixed(1);\n      totalRemainingCPS = totalRemainingCPS + (enrolledCPS - 24);\n    }\n\n    if (enrolledCPS === 24 || enrolledCPS === 0) {\n      remainingSession = (totalRemainingCPS / 24).toFixed(1);\n    }\n    setRemainingCreditPints(totalRemainingCPS);\n    calcLastSession(remainingSession);\n  };\n\n  const calcLastSession = (remainingSession) => {\n    let session = \"\";\n    console.log(\"Remaining Session \" + remainingSession + \" sessions left\");\n    switch (true) {\n      case remainingSession <= 1:\n        session = \"Autumn 2021\";\n        break;\n      case 1 < remainingSession && remainingSession <= 2:\n        session = \"Spring 2021\";\n        break;\n      case 2 < remainingSession && remainingSession <= 3:\n        session = \"Autumn 2022\";\n        break;\n      case 3 < remainingSession && remainingSession <= 4:\n        session = \"Spring 2022\";\n        break;\n      case 4 < remainingSession && remainingSession <= 5:\n        session = \"Autumn 2023\";\n        break;\n      case 5 < remainingSession && remainingSession <= 6:\n        session = \"Spring 2023\";\n        break;\n      case 6 < remainingSession && remainingSession <= 7:\n        session = \"Autumn 2024\";\n        break;\n      case 7 < remainingSession && remainingSession <= 8:\n        session = \"Spring 2024\";\n        break;\n      default:\n        console.log(\n          \"May be.. too future, cannot show after Spring 2025 session..\"\n        );\n    }\n    setCourseEndDate(session);\n  };\n\n  const calcTuitionFees = (remainingCPS) => {\n    //console.log(userInputs);\n    let tuitionFees = userInputs.subjectTuitionFees;\n    let cps = userInputs.subjectCPSForFees;\n    let enrolledCPS = userInputs.enrolledCPS;\n    let currentSessionTuitionFees = (tuitionFees / cps) * enrolledCPS;\n    let estimatedTotalTuitionFees = (tuitionFees / cps) * remainingCPS;\n\n    setCurrentTuitionFees(currentSessionTuitionFees);\n    setTotalTuitionFees(estimatedTotalTuitionFees);\n  };\n\n  return (\n    <Wrapper id=\"home\">\n      <Container>\n        <Badge pill variant=\"info\">\n          Autumn 2021\n        </Badge>\n        <h1>\n          <i className=\"fas fa-dog\"></i> CoE Helper\n        </h1>\n        <br />\n        <p>Calculate estimated course end date & total tuition fees left.</p>\n        <br />\n        <CoECalculationForm storeInputValues={storeInputValues} />\n        <br />\n        {showResult && (\n          <ResultDisplay\n            remainingCreditPints={remainingCreditPints}\n            courseEndDate={courseEndDate}\n            totalTuitionFees={totalTuitionFees}\n            currentTuitionFees={currentTuitionFees}\n            hideDisplayCard={() => {\n              setShowResult(false);\n            }}\n          />\n        )}\n      </Container>\n    </Wrapper>\n  );\n};\nexport default CoEHelper;\n","import React, { useEffect, useState } from \"react\";\nimport { Tabs, Tab, Table } from \"react-bootstrap\";\nimport jsonData from \"../../data/importantDatesByYearAndSession\";\n\nconst SessionDatesTable = () => {\n  const [importantDatesBySession, setImportantDatesBySession] = useState([]);\n  useEffect(() => {\n    setImportantDatesBySession([...jsonData]);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Tabs defaultActiveKey=\"autumn21\" transition={false} id=\"ourtable\">\n        {importantDatesBySession.map((session, index) => {\n          return (\n            <Tab eventKey={session.eventKey} title={session.title} key={index}>\n              <Table striped bordered hover variant=\"dark\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th>Course Start Date</th>\n                    <th>Official Result Release Date</th>\n                    <th>Census Date</th>\n                  </tr>\n                  {session.calendars.map((dates, index) => {\n                    return (\n                      <tr key={index}>\n                        <th>{dates.name}</th>\n                        <td>{dates.startDate}</td>\n                        <td>{dates.resultReleaseDate}</td>\n                        <td>{dates.censusDate}</td>\n                      </tr>\n                    );\n                  })}\n                </thead>\n              </Table>\n            </Tab>\n          );\n        })}\n      </Tabs>\n    </React.Fragment>\n  );\n};\n\nexport default SessionDatesTable;\n","import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport jsonData from '../../data/coursesByCalendar';\n\nconst CoursesByCalendar = () => {\n    const courses = [...jsonData];\n    return(\n        <Accordion>\n            {\n                courses.map((calendar,index) => {\n                    return (\n                        <Card key={index}>\n                            <Card.Header>\n                                <Accordion.Toggle\n                                    as={Button} variant=\"link\" eventKey={calendar.eventKey}>\n                                    <strong>{calendar.name}</strong> &nbsp;&nbsp;\n                                    <i className=\"fas fa-caret-down\"></i>\n                                </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey={calendar.eventKey}>\n                                <Card.Body>\n                                    {\n                                        calendar.courseList.map((course, index)=> <li key={index}>{course}</li>)\n                                    }\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    );\n                })\n            }\n        </Accordion>\n    );\n};\nexport default CoursesByCalendar;","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nconst AlertMessage = ({variant, href, message1, linkText, message2}) => {\n    return(\n        <Alert variant={variant}>\n            {message1} <Alert.Link href={href} target=\"_blank\"> {linkText} </Alert.Link>\n            {message2}\n        </Alert>\n    )\n};\nexport default AlertMessage;","import styled from 'styled-components';\n\n// CSS for Important Date component using styled\n const Wrapper= styled.section`\n  // global\n  padding: 1em;\n  padding-top: 4em;\n  padding-bottom: 4em;\n  background: #bb9f99;\n  \n  // navigation tab\n  nav.nav-tabs {\n    color: #8c8c8c;\n    background: gainsboro;\n  }\n  a.nav-link {\n   color: #8c8c8c;\n  }\n\n  //card - course List CalB, CalC, CalD\n  .card {\n   background: #484950; \n  }\n  \n  button.btn-link {\n   color: gainsboro;\n   :hover {\n     text-decoration: none;\n     color: #c5b7b0;\n   }\n  }\n  \n  .card-body {\n   background: #bb9f99;\n   border-color: transparent;\n   color:#484950;\n  }\n  \n  // Alert message with link (going to external page)\n  a.alert-link {\n  background: transparent;\n  text-decoration-line: underline;\n  }\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport SessionDatesTable from \"./SessionDatesTable\";\nimport CoursesByCalendar from \"./CoursesByCalendar\";\nimport AlertMessage from \"../ReusableComponents/AlertMessage\";\nimport Wrapper from \"./ImportantDates.styles\";\n\nconst ImportantDates = () => {\n  return (\n    <Wrapper id=\"importantDates\">\n      <Container>\n        <h1>\n          <i className=\"fas fa-calendar-alt\"></i> Important Dates{\" \"}\n        </h1>\n        <br />\n        <SessionDatesTable />\n        <br />\n        <CoursesByCalendar />\n        <br />\n        <AlertMessage\n          variant=\"info\"\n          href=\"https://www.handbook.uts.edu.au/dates_academic.html\"\n          message1=\"Click\"\n          linkText=\"HERE\"\n          message2=\" for UTS Academic Calendar 2020 (open in a new tap).\"\n        />\n        <AlertMessage\n          variant=\"warning\"\n          href=\"https://www.handbook.uts.edu.au/dates.html\"\n          message1=\"Click\"\n          linkText=\"HERE\"\n          message2=\" for UTS Principal Dates 2020 (open in a new tap).\"\n        />\n      </Container>\n    </Wrapper>\n  );\n};\nexport default ImportantDates;\n","import styled from \"styled-components\";\n\nconst Wrapper= styled.section`\n  padding: 1em;\n  padding-top: 4em;\n  padding-bottom: 4em;\n  background: #9F939D;\n  \n  .pagination {\n    justify-content: center;\n  }\n  \n  .list-group-item {\n  background: #4c4a58;\n  color: #f3e5de;\n  }\n  \n  .badge {\n  background: #c9ada8;\n  color: #363636;\n  }\n  \n  a.page-link {\n    text-align: center;\n    color: #f3e5de;\n    background: #4c4a58;\n    border-color: #b4a69f;\n \n  }  \n`;\n\nexport default Wrapper;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nconst Search = (props) => {\n  const onChangeHandler = (e) => {\n    props.userInputHandler(e.target.value);\n  };\n\n  return (\n    <>\n      <Form>\n        <Form.Group controlId=\"searchInput\">\n          <Form.Control\n            name=\"query\"\n            value={props.query}\n            type=\"text\"\n            onChange={onChangeHandler}\n            onKeyPress={(e) => {\n              e.key === \"Enter\" && e.preventDefault();\n            }}\n            placeholder=\"Search course name or course code to find CRICOS...\"\n          />\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport Alert from \"../ReusableComponents/AlertMessage\";\nimport { ListGroup, Badge } from \"react-bootstrap\";\nimport CopyIcon from \"../ReusableComponents/CopyIcon\";\n\nconst CourseList = ({ searchResult }) => {\n  return (\n    <>\n      {searchResult.length >= 1 ? (\n        <ListGroup>\n          {searchResult.map((result) => {\n            return (\n              <ListGroup.Item key={result.CRICOS}>\n                <label className=\"h5\">\n                  <Badge>\n                    {result.CRICOS} &nbsp;\n                    <CopyIcon text={result.CRICOS} />\n                  </Badge>\n                </label>\n                &nbsp;&nbsp; <strong>{result.code}</strong>\n                &nbsp;&nbsp;{result.name}\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <Alert\n          variant=\"danger\"\n          href=\"https://www.handbook.uts.edu.au/\"\n          message1=\"Opps! cannot find the course. Please check  \"\n          linkText=\"UTS Handbook\"\n          message2=\" (Open in a new tab).\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default CourseList;\n","import React from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\n\nconst PaginationComp = ({ itemsPerPage, searchResult, paginate }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(searchResult / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const returnPaginationJSX = pageNumbers.map((number) => {\n    if (number < 6) {\n      return (\n        <Pagination.Item key={number} onClick={() => paginate(number)}>\n          {number}\n        </Pagination.Item>\n      );\n    }\n    if (number === 6) {\n      return <Pagination.Ellipsis key=\"hjksg0975%\" />;\n    }\n    return null;\n  });\n\n  return (\n    <>\n      <Pagination>{returnPaginationJSX}</Pagination>\n    </>\n  );\n};\n\nexport default PaginationComp;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport jsonData from \"../../data/coursesWithCRICOS\";\nimport Wrapper from \"./CRICOSFinder.styles\";\nimport Search from \"./Search\";\nimport CourseList from \"./CourseList\";\nimport PaginationComp from \"../ReusableComponents/PaginationComp\";\n\nconst CRICOSFinder = () => {\n  // Lists of courses from json file\n  const [courses, setCourses] = useState([]);\n  // To save user's input query\n  const [query, setQuery] = useState(\"\");\n  // List of courses matching with user query\n  const [searchResult, setSearchResult] = useState([]);\n  // shows CourseList component only when searching is true\n  const [searching, setSearching] = useState(false);\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [coursesPerPage] = useState(7);\n\n  useEffect(() => {\n    setCourses([...jsonData]);\n  }, []);\n\n  useEffect(() => {\n    searchResultHandler();\n  }, [query]);\n\n  /***************************\n   *  Handling UserInput\n   * ************************/\n\n  const userInputHandler = (userInput) => {\n    setQuery(userInput);\n    userInput === \"\" ? setSearching(false) : setSearching(true);\n  };\n\n  const searchResultHandler = () => {\n    let filterQuery = query.toLowerCase();\n    const searchResultList = courses.filter((course) => {\n      if (course.name.toLowerCase().indexOf(filterQuery) > -1) {\n        return course;\n      }\n      if (course.code.toLowerCase().indexOf(filterQuery) > -1) {\n        return course;\n      }\n    });\n    setSearchResult([...searchResultList]);\n  };\n\n  /***************************\n   *  Handling Pagination\n   * ************************/\n\n  const indexOfLastItem = currentPage * coursesPerPage;\n  const indexOfFirstItem = indexOfLastItem - coursesPerPage;\n  const currentSearchedCourses = searchResult.slice(\n    indexOfFirstItem,\n    indexOfLastItem\n  );\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <Wrapper id=\"cricosFinder\">\n      <Container>\n        <h1>\n          <i className=\"fas fa-search\"></i> CRICOS Finder\n        </h1>\n        <br />\n        <Search userInputHandler={userInputHandler} query={query} />\n        {searching && (\n          <>\n            <CourseList searchResult={currentSearchedCourses} /> <br />\n            <PaginationComp\n              itemsPerPage={coursesPerPage}\n              searchResult={searchResult.length}\n              paginate={paginate}\n            />\n          </>\n        )}\n      </Container>\n    </Wrapper>\n  );\n};\nexport default CRICOSFinder;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.section`\n  padding: 1em;\n  padding-top: 4em;\n  padding-bottom: 3em;\n  background: #555b6e;\n  \n  .form-row {\n  padding-bottom: 1em;\n  }\n`;\n\nexport const CENTERDIV= styled.div`     \n  text-align: center;\n`;\n\nexport const ICON = styled.i`\n  position:relative;\n  top: calc(50% - 10px); /* 50% - 3/4 of icon height */\n  font-size: 2rem;\n  :hover {\n    cursor: pointer;\n    color: #313543;\n  }\n`;\n\nexport default Wrapper;","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { CENTERDIV, ICON } from \"./FeesCalculator.styles\";\nimport FormGroup from \"../ReusableComponents/FormGroup\";\n\nconst InputGroupsDisplay = ({\n  inputTextHandler,\n  addClickHandler,\n  deleteClickHandler,\n  id,\n  showDeleteBtn,\n  inputGroupTotalFeesObj,\n}) => {\n  // to set total fees in total in ROW\n  let feesInTotalObj = {\n    id,\n    feesInTotal: 0,\n  };\n  feesInTotalObj = { ...inputGroupTotalFeesObj };\n\n  return (\n    <Form.Row className >\n      <FormGroup\n        xs={5}\n        sm={3}\n        md={3}\n        controlId={\"subjectFees\"}\n        label={\"Fees\"}\n        name={\"subjectFees\"}\n        type={\"number\"}\n        inputTextHandler={inputTextHandler}\n      />\n      <CENTERDIV className=\"col-xs-1\">\n        <ICON className=\"fas fa-times\"></ICON>\n      </CENTERDIV>\n      <FormGroup\n        xs={5}\n        sm={2}\n        md={2}\n        controlId={\"subjectNumbers\"}\n        label={\"Numbers\"}\n        name={\"subjectNumbers\"}\n        type={\"number\"}\n        inputTextHandler={inputTextHandler}\n      />\n      <CENTERDIV className=\"col-xs-1\">\n        <ICON className=\"fas fa-equals\"></ICON>\n      </CENTERDIV>\n\n      <FormGroup\n        xs={7}\n        sm={3}\n        md={4}\n        controlId={\"inputGroupTotalFees\"}\n        label={\"Total: \"}\n        name={\"inputGroupTotalFees\"}\n        type={\"number\"}\n        disabled={true}\n        placeholder={feesInTotalObj.feesInTotal}\n      />\n\n      <CENTERDIV className=\"col-xs-1\" onClick={addClickHandler}>\n        <ICON\n          style={{ fontSize: \"2.4rem\" }}\n          className=\"fas fa-plus-square\"\n        ></ICON>\n      </CENTERDIV>\n      {showDeleteBtn && (\n        <CENTERDIV className=\"col-xs-1\" onClick={() => deleteClickHandler(id)}>\n          <ICON\n            style={{ fontSize: \"2.2rem\" }}\n            className=\"fas fa-trash-alt\"\n          ></ICON>\n        </CENTERDIV>\n      )}\n    </Form.Row>\n  );\n};\n\nexport default InputGroupsDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport InputGroupsDisplay from \"./InputGroupsDisplay\";\n\nconst InputFieldsList = ({ sumChanged }) => {\n  const [inputGroupIDArray, setInputGroupIDArray] = useState([\n    { id: Math.random() * 1000 },\n  ]);\n  const [inputGroupValuesArray, setInputGroupValuesArray] = useState([]);\n  const [inputGroupTotalFeesArray, setInputGroupTotalFeesArray] = useState([]);\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  useEffect(() => {\n    calculateTotalSum();\n  }, [inputGroupTotalFeesArray]);\n\n  /*****************************\n   *  Handle User Inputs\n   * *****************************/\n  const inputTextHandler = (e, id) => {\n    let copiedInputGroupValuesArray = inputGroupValuesArray;\n    let inputValuesInRow = {\n      id: id,\n      subjectFees: 0,\n      subjectNumbers: 0,\n    };\n    let name = e.target.name;\n    let inputValue = parseFloat(e.target.value);\n\n    let index = copiedInputGroupValuesArray\n      .map((userInputs) => userInputs.id)\n      .indexOf(id);\n\n    if (index === -1) {\n      inputValuesInRow = {\n        ...inputValuesInRow,\n        [name]: inputValue,\n      };\n      copiedInputGroupValuesArray = [\n        ...copiedInputGroupValuesArray,\n        inputValuesInRow,\n      ];\n    } else {\n      inputValuesInRow = {\n        ...copiedInputGroupValuesArray[index],\n        [name]: inputValue,\n      };\n      copiedInputGroupValuesArray[index] = inputValuesInRow;\n    }\n    setInputGroupValuesArray([...copiedInputGroupValuesArray]);\n    calculateInputGroupFees(id, inputValuesInRow);\n  };\n\n  /**********************************************\n   *  calculate fees for user Inputs Groups (row)\n   * **********************************************/\n\n  const calculateInputGroupFees = (id, inputValuesInRow) => {\n    let totalFeesInRow = {\n      id: id,\n      feesInTotal: parseFloat(\n        inputValuesInRow.subjectFees * inputValuesInRow.subjectNumbers\n      ).toFixed(2),\n    };\n    let copiedInputGroupTotalFeesArray = [...inputGroupTotalFeesArray];\n    let index = copiedInputGroupTotalFeesArray\n      .map((totalSumItem) => totalSumItem.id)\n      .indexOf(id);\n    if (index === -1) {\n      copiedInputGroupTotalFeesArray = [\n        ...inputGroupTotalFeesArray,\n        totalFeesInRow,\n      ];\n    } else {\n      copiedInputGroupTotalFeesArray[index].feesInTotal =\n        totalFeesInRow.feesInTotal;\n    }\n    setInputGroupTotalFeesArray([...copiedInputGroupTotalFeesArray]);\n  };\n\n  // calculate sum of total fees in row\n  const calculateTotalSum = () => {\n    const totalSumArray = [...inputGroupTotalFeesArray].map((item) =>\n      parseFloat(item.feesInTotal)\n    );\n    if (totalSumArray.length > 0) {\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\n      let totalSum = totalSumArray.reduce(reducer);\n      sumChanged(totalSum);\n    }\n    if (totalSumArray.length === 0) {\n        sumChanged(0);\n    }\n  };\n\n  /**********************************\n   *  Add and Delete InputGroups\n   * ********************************/\n\n  //  Add a new InputGroup: When click '+' button\n  const addInputGroup = () => {\n    const newInputGroupId = { id: Math.random() * 1000 };\n    setInputGroupIDArray([...inputGroupIDArray, newInputGroupId]);\n    if (!showDeleteBtn) {\n      setShowDeleteBtn(true);\n    }\n  };\n\n  // Delete InputGroup row --> When click 'trash bin' button\n  const deleteInputGroup = (id) => {\n    const copiedInputGroupIDArray = [...inputGroupIDArray];\n    const copiedInputGroupValuesArray = [...inputGroupValuesArray];\n    const copiedInputGroupTotalFeesArray = [...inputGroupTotalFeesArray];\n\n    let inputGroupIdIndex = copiedInputGroupIDArray\n      .map((inputGroup) => inputGroup.id)\n      .indexOf(id);\n    let inputValuesIndex = copiedInputGroupValuesArray\n      .map((userInputValues) => userInputValues.id)\n      .indexOf(id);\n    let totalFeesIndex = copiedInputGroupTotalFeesArray\n      .map((totalFees) => totalFees.id)\n      .indexOf(id);\n\n    if (inputGroupIdIndex > -1) {\n      copiedInputGroupIDArray.splice(inputGroupIdIndex, 1);\n      console.log(\"hello\");\n    }\n\n    if (inputValuesIndex > -1) {\n      copiedInputGroupValuesArray.splice(inputValuesIndex, 1);\n    }\n\n    if (totalFeesIndex > -1) {\n      copiedInputGroupTotalFeesArray.splice(totalFeesIndex, 1);\n    }\n\n    if (copiedInputGroupIDArray.length === 1) {\n      setShowDeleteBtn(false);\n    }\n\n    setInputGroupIDArray([...copiedInputGroupIDArray]);\n    setInputGroupValuesArray([...copiedInputGroupValuesArray]);\n    setInputGroupTotalFeesArray([...copiedInputGroupTotalFeesArray]);\n  };\n\n  return (\n    <Form>\n      {inputGroupIDArray.map((inputGroup, index) => {\n        return (\n          <InputGroupsDisplay\n            id={inputGroup.id}\n            key={inputGroup.id}\n            addClickHandler={addInputGroup}\n            deleteClickHandler={deleteInputGroup}\n            inputTextHandler={(e) => inputTextHandler(e, inputGroup.id)}\n            showDeleteBtn={showDeleteBtn}\n            inputGroupTotalFeesObj={inputGroupTotalFeesArray.find(\n              (item) => item.id === inputGroup.id\n            )}\n          />\n        );\n      })}\n    </Form>\n  );\n};\n\nexport default InputFieldsList;\n","import React from \"react\";\nimport { Card, Badge } from \"react-bootstrap\";\nimport CopyIcon from \"../ReusableComponents/CopyIcon\";\n\nconst ResultSumDisplay = ({ sum }) => {\n  return (\n    <Card style={{ backgroundColor: \"#353945\" }} text=\"white\">\n      <Card.Body className=\"h5\">\n        <strong>The Total Fees: </strong>&nbsp;\n        <Badge style={{ background: \"#6d6875\", color: \"#f0efeb\" }}>\n          A${sum}&nbsp;&nbsp;\n          <CopyIcon text={sum}></CopyIcon>\n        </Badge>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ResultSumDisplay;\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Wrapper from \"./FeesCalculator.styles\";\nimport InputFieldsList from \"./InputFieldsList\";\nimport ResultSumDisplay from \"./ResultSumDisplay\";\n\nconst FeesCalculator = () => {\n  const [sum, setSum] = useState(0.0);\n  const [showResultDisplay, setShowResultDisplay] = useState(false);\n  const sumChangeHandler = (totalSum) => {\n    setSum(totalSum);\n    totalSum > 0 ? setShowResultDisplay(true) : setShowResultDisplay(false);\n  };\n\n  // function required - whenever the value of feesCal changes, calculate the total fees\n  return (\n    <Wrapper id=\"feesCalculator\">\n      <Container>\n        <h1>\n          <i className=\"fas fa-calculator\"></i> Fees Calculator\n        </h1>\n        <br />\n        <InputFieldsList sumChanged={sumChangeHandler} />\n        <br />\n        {showResultDisplay && <ResultSumDisplay sum={sum} />}\n        <br />\n      </Container>\n    </Wrapper>\n  );\n};\nexport default FeesCalculator;\n","import React from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport CoEHelper from \"./components/CoEHelper/CoEHelper\";\nimport ImportantDates from \"./components/ImportantDate/ImportantDates\";\nimport CRICOSFinder from \"./components/CRICOSFinder/CRICOSFinder\";\nimport FeesCalculator from \"./components/FeesCalculator/FeesCalculator\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Navigation />\n      <CoEHelper />\n      <ImportantDates />\n      <CRICOSFinder />\n      <FeesCalculator />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}